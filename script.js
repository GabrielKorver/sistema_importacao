// Fun√ß√£o de login
function login() {
    let email = document.querySelector('#email').value;
    let password = document.querySelector('#senha').value;

    if (email === 'importacao@enviai.com.br' && password === 'enviai@2021') {
        alert('Seja Bem-Vindo');

        localStorage.setItem('loggedIn', 'true'); // Salva o estado de login no localStorage
        window.location.href = 'sistema.html'; // Redireciona para o sistema

    } else {
        alert('Usu√°rio ou senha inv√°lida');
    }
}

// Fun√ß√£o de logout
function sair() {
    alert('Voc√™ saiu do sistema!');
    localStorage.removeItem('loggedIn'); // Remove o estado de login
    window.location.href = 'login.html'; // Redireciona para a p√°gina de login
}

function verificarLogin() {
    if (window.location.pathname.includes('sistema.html') && !localStorage.getItem('loggedIn')) {
        alert('Voc√™ precisa estar logado para acessar esta p√°gina.');
        window.location.href = 'login.html';
    }
}

// Chama a fun√ß√£o de verifica√ß√£o de login ao carregar o script
verificarLogin();

// Importa√ß√£o de etiquetas
let importacao = JSON.parse(localStorage.getItem('importacao')) || []; // Agora √© um array de objetos

// Vari√°veis de controle de pagina√ß√£o
const ITEMS_PER_PAGE = 10;
let currentPage = 1;

// Fun√ß√£o para exibir itens com pagina√ß√£o
function renderTable() {
    let tbody = document.querySelector("tbody");
    tbody.innerHTML = ""; // Limpa a tabela

    let start = (currentPage - 1) * ITEMS_PER_PAGE;
    let end = start + ITEMS_PER_PAGE;
    let paginatedItems = importacao.slice(start, end);

    paginatedItems.forEach(item => {
        let hora = new Date();
        let h = hora.getHours();
        let m = hora.getMinutes();
        let s = hora.getSeconds();

        let dataAtual = new Date();
        let dia = dataAtual.getDate();
        let mes = dataAtual.getMonth() + 1;
        let ano = dataAtual.getFullYear();

        let tr = document.createElement("tr");

        tr.innerHTML = `
            <td>${item.rastreio}</td>
            <td>${item.cliente}</td>
            <td>${h}:${m}:${s}</td>
            <td>${dia}/${mes}/${ano}</td>
            <td>N√£o Coletado</td>
            <td><span onclick="deletarImportacao(this)">üóëÔ∏è</span></td>
        `;
        tbody.appendChild(tr);
    });

    renderPagination();
}

// Fun√ß√£o para renderizar bot√µes de pagina√ß√£o
function renderPagination() {
    let paginationContainer = document.querySelector("#pagination");
    paginationContainer.innerHTML = ""; // Limpa os bot√µes existentes

    let totalPages = Math.ceil(importacao.length / ITEMS_PER_PAGE);

    for (let i = 1; i <= totalPages; i++) {
        let button = document.createElement("button");
        button.textContent = i;
        button.className = i === currentPage ? "active" : "";
        button.onclick = () => {
            currentPage = i;
            renderTable();
        };
        paginationContainer.appendChild(button);
    }
}

window.onload = function () {
    renderTable();
};

function importar() {
    let tbRastreio = document.querySelector('#rastreio').value.toUpperCase();
    let cliente = document.querySelector('#cliente').value.toUpperCase();

    if (tbRastreio === "" || tbRastreio.length < 13) {
        alert('[ERRO] DIGITE UM RASTREIO V√ÅLIDO!');
        return;
    }

    if (cliente === "") {
        alert('[ERRO] DIGITE UM CLIENTE V√ÅLIDO!');
        return;
    }

    if (importacao.some(item => item.rastreio === tbRastreio)) {
        alert(`Rastreio j√° importado: ${tbRastreio}`);
        return;
    } else {
        // Adiciona o item no in√≠cio do array
        importacao.unshift({ rastreio: tbRastreio, cliente }); // Salva rastreio e cliente como objeto

        // Salva o array no localStorage
        localStorage.setItem('importacao', JSON.stringify(importacao));

        // Limpa os campos de entrada
        document.querySelector('#rastreio').value = '';

        // Re-renderiza a tabela
        renderTable();

        alert('Rastreio Importado com sucesso!');

    }
}

function deletarImportacao(td) {
    let rastreio = td.parentElement.parentElement.querySelector('td').textContent;
    importacao = importacao.filter(item => item.rastreio !== rastreio); // Remove o rastreio do array

    // Salva o array atualizado no localStorage
    localStorage.setItem('importacao', JSON.stringify(importacao));

    // Re-renderiza a tabela
    renderTable();

    alert('Rastreio removido com sucesso!')
}
